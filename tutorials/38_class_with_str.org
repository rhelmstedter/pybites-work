#+title: Class with __str___ Method
#+author: Russell Helmstedter
#+date: [2024-07-09 Tue]

* Make A Class Pretty


* Printing the Class Objects
#+begin_src python :exports both :results output
class Circle:
    def __init__(self, radius):
        self.radius = radius


my_circle = Circle(3)
print(my_circle)
#+end_src

#+RESULTS:
: <__main__.Circle object at 0x1034732b0>
:

* Adding the ~__str__~ Method
#+begin_src python :exports both :results output
class Circle:
    def __init__(self, radius):
        self.radius = radius

    def __str__(self):
        return f"A circle with a radius of {self.radius}."

my_circle = Circle(3)
print(my_circle)

#+end_src

#+RESULTS:
: A circle with a radius of 3.
:



* The Final Class
#+begin_src python :exports both :results output
class Circle:
    def __init__(self, radius):
        self.radius = radius

    def calc_area(self):
        return 3.14159 * self.radius ** 2

    def calc_circumference(self):
        return 2 * 3.14159 * self.radius

    def __str__(self):
        return f"A circle with a radius of {self.radius}."


my_circle = Circle(3)
print(my_circle)

my_little_circle = Circle(1)
print(my_little_circle)
#+end_src

#+RESULTS:
: A circle with a radius of 3.
: A circle with a radius of 1.
:
